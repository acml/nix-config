name: update-flakes
on:
  schedule:
    - cron:  '*/120 * * * *'
  workflow_dispatch:
jobs:
  get-flakes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-flakes.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-nix
        with:
          cachix: false
      - id: get-flakes
        run: |
          get_flake_inputs() {
            nix flake metadata --json \
              | jq -c '
                  .locks.nodes.root.inputs
                  | {flake: keys}'
          }

          echo "matrix=$(get_flake_inputs)" >> "$GITHUB_OUTPUT"
  update-flake:
    name: update-${{ matrix.flake }}
    runs-on: ubuntu-latest
    needs: get-flakes
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-flakes.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-nix
        with:
          cachix: false
      - uses: DeterminateSystems/update-flake-lock@v17
        id: update-flake
        with:
          branch: update-${{ matrix.flake }}
          commit-msg: "chore(flake/${{ matrix.flake }}): update"
          git-author-email: hatesegfault@protonmail.ch
          git-author-name: hatesegfault
          inputs: ${{ matrix.flake }}
          pr-title: "chore(flake/${{ matrix.flake }}): update"
          token: ${{ secrets.PAT }}
      - uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ secrets.PAT }}
          pull-request-number: ${{ steps.update-flake.outputs.pull-request-number }}
          merge-method: rebase
